#!/usr/bin/env perl
use Mojolicious::Lite;
use DBIx::Connector;

my $conn =
  DBIx::Connector->new("dbi:Pg:$ENV{DATABASE_URL}", '', '',
  {AutoCommit => 1, RaiseError => 1})
  or die;
$conn->mode('fixup');

####################
# Database Helpers #
####################
helper 'db.list_tags' => sub {
  my ($c) = @_;
  $conn->run(
    sub {
      my $dbh = $_;
      my $sth = $dbh->prepare_cached(q|SELECT tag FROM tags|);
      $dbh->selectcol_arrayref($sth);
    }
  );
};

helper 'db.list_articles' => sub {
  my ($c) = @_;
  $conn->run(
    sub {
      my $dbh = $_;
      my $sth = $dbh->prepare_cached(q|SELECT title FROM articles|);
      $dbh->selectcol_arrayref($sth);
    }
  );
};

##########
# Routes #
##########
get '/' => sub {
  my $c = shift;
  $c->render('index');
};

get '/:topdir/#name' => [topdir => [qw(article tag)]] => sub {
  my $c      = shift;
  my $name   = $c->param('name');
  my $topdir = $c->param('topdir');

  $topdir =~ s|\.{2,}|-|g;
  $name =~ s|\.{2,}|-|g;
  $topdir =~ s|^\.+||;
  $name =~ s|^\.+||;

  if ($topdir eq 'article' && $c->db->article_exists($name)) {
    $c->render('article');
  }
  elsif ($topdir eq 'tag' && $c->db->tag_exists($name)) {
    $c->render('tag');
  }
  else {
    $c->render('does_not_exist');
  }
};

app->start;
__DATA__

@@ index.html.ep
% layout 'default';
% title 'Welcome';
% for ($c->db->list_articles) {
Do some magic
% }

@@ layouts/default.html.ep
<!DOCTYPE html>
<html>
  <head><title><%= title %></title></head>
  <body><%= content %></body>
</html>

@@ tag.atom.ep

@@ tag.html.ep
% layout 'default';
% title 'Tag: ' . $name;
%= $c->db->list_articles_with_tag($name)

@@ article.html.ep
